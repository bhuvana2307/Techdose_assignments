class Solution:
    def possibleBipartition(self, n: int, dislikes: List[List[int]]) -> bool:
        adj=defaultdict(list)
        for ver in dislikes:
            a,b =ver 
            adj[a].append(b)
            adj[b].append(a)
        odd=[0]*(n+1) 
        def bfs(i):
            if odd[i]:
                return True 
            q=deque([i])
            odd[i]=-1 
            while q:
                i=q.popleft()
                for nei in adj[i]:
                    if odd[i]==odd[nei]:
                        return False 
                    elif not odd[nei]:
                        q.append(nei)
                        odd[nei]=(-1*odd[i])
            return True 
        
        for i in range(1,n+1):
            if not bfs(i):
                return False 
        return True
